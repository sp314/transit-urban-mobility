ggplot() +
geom_sf(mapping = aes(fill = mean_travel_time), lwd=0.2) +
geom_sf(data = travel_time_sf$centroids, cex = 0.5) +
scale_fill_viridis_c(direction = -1)
travel_time_sf %>% filter(year == 2017, month == 1, week == 4) %>%
ggplot() +
geom_sf(mapping = aes(fill = mean_travel_time), lwd=0.2) +
geom_sf(data = dc_roads, color = "white", lwd=0.2) +
geom_sf(data = metro_line, color = "black", lwd=0.2) +
theme_map +
coord_sf(xlim = c(map_lims["xmin"], map_lims["xmax"]), ylim = c(map_lims["ymin"], map_lims["ymax"])) +
scale_fill_viridis_c(direction = -1)
dc_acs_tracts$centroids
dc_acs_tracts %>% View
library(spatialreg)
library(tidyverse)
library(sf)
library(rgdal)
library(tigris)
library(spdep)
library(spatialreg)
st_queen <- function(a, b = a) st_relate(a, b, pattern = "F***T****")
Queen <- as.nb.sgbp(st_queen(dat))
library(ape)
# Compute distance from Washington Monument
mnm <- tribble(
~latitude, ~longitude,
38.8895, -77.0353
)
mnm_sf <- mnm %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
st_transform(crs = 102285)
travel_time_sf <- travel_time_sf %>%
mutate(distance = st_distance(centroids, mnm_sf$geometry, by_element = TRUE))
travel_time_sf$distance %>% class(\)
travel_time_sf$distance %>% class()
# Compute distance from Washington Monument
mnm <- tribble(
~latitude, ~longitude,
38.8895, -77.0353
)
mnm_sf <- mnm %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
st_transform(crs = 102285)
travel_time_sf <- travel_time_sf %>%
mutate(distance = as.numeric(st_distance(centroids, mnm_sf$geometry, by_element = TRUE)))
travel_time_sf$distance %>% class()
travel_time_sf %>% head()
travel_time_sf %>% head(7)
travel_time_sf %>% View()
st_queen <- function(a, b = a) st_relate(a, b, pattern = "F***T****")
Queen <- as.nb.sgbp(st_queen(dat))
st_queen <- function(a, b = a) st_relate(a, b, pattern = "F***T****")
as.nb.sgbp <- function(x, ...) {
attrs <- attributes(x)
x <- lapply(x, function(i) { if(length(i) == 0L) 0L else i } )
attributes(x) <- attrs
class(x) <- "nb"
x
}
Queen <- as.nb.sgbp(st_queen(dat))
knitr::opts_chunk$set(echo = TRUE, error=TRUE)
load('tree.RData')
SUB <- treelong %>%
filter(Year == 2000)
A <- SUB %>%
count(Grid) %>%
mutate(TreeCount = n) %>%
dplyr::select(Grid, TreeCount)
B <- SUB %>%
group_by(Grid) %>%
summarize(
Elev = mean(Elev),
NitroPC = mean(NitroPC),
Mound = mean(Mound),
BGround = mean(BGround),
MeanTreeSize = mean(TreeSize,na.rm=TRUE),
MedianTreeSize = median(TreeSize,na.rm=TRUE),
PrevFires = mean(PrevFires,na.rm=TRUE),
Fires = mean(Fire,na.rm=TRUE),
BC = mean(BC)
)
C <- SUB %>%
count(Grid, Status) %>%
group_by(Grid) %>%
mutate(AliveProp = n/sum(n)) %>%
dplyr::filter(Status == 'L') %>%
dplyr::select(Grid, AliveProp)
G <- data.frame(Grid = 1:1600, XGrid = rep(seq(30,420,10),40),  YGrid = rep(seq(10,400,10),each=40))
dat <-  G %>%
left_join(A) %>%
left_join(B) %>%
left_join(C) %>%
distinct() %>%
dplyr::filter(!is.na(XGrid))
head(dat)
dat %>% View()
travel_time_sf %>% head()
G <- data.frame(Grid = 1:1600, XGrid = rep(seq(30,420,10),40),  YGrid = rep(seq(10,400,10),each=40))
G
dat <- st_sf(dat)
dat$geom <- st_sfc(apply(dat[,c('XGrid','YGrid')],1, function(x) st_polygon(list(cbind(x[1] + c(-5,-5,5,5,-5), x[2] + c(-5,5,5,-5,-5)))))) #Required to make grid polygons and put them as a geometry column in dat
dat
dat <- st_sf(dat)
dat
week_1 <- travel_time_sf %>% filter(year = 2016, month = 9, week = 1)
week_1 <- travel_time_sf %>% filter(year == 2016, month == 9, week == 1)
week_1
st_queen <- function(a, b = a) st_relate(a, b, pattern = "F***T****")
as.nb.sgbp <- function(x, ...) {
attrs <- attributes(x)
x <- lapply(x, function(i) { if(length(i) == 0L) 0L else i } )
attributes(x) <- attrs
class(x) <- "nb"
x
}
Queen <- as.nb.sgbp(st_queen())
Queen <- as.nb.sgbp(st_queen(week_1))
Queen
plot(Queen)
W <- nb2mat(Queen, style='B', zero.policy = TRUE)
W
week_1 <- travel_time_sf %>% filter(year == 2016, month == 9, week == 1)
st_queen <- function(a, b = a) st_relate(a, b, pattern = "F***T****")
as.nb.sgbp <- function(x, ...) {
attrs <- attributes(x)
x <- lapply(x, function(i) { if(length(i) == 0L) 0L else i } )
attributes(x) <- attrs
class(x) <- "nb"
x
}
Queen <- as.nb.sgbp(st_queen(week_1))
W <- nb2mat(Queen, style='B', zero.policy = TRUE)
plot(week_1)
plot(week_1, max.plot = 1)
plot(week_1$mean_travel_time,)
plot(week_1, mean_travel_time)
plot(week_1["mean_travel_time"])
plot(week_1["mean_travel_time"])
plot(Queen, week_1$centroids, add=TRUE, col="blue", cex = 0.5, lwd = 0.5)
plot(Queen, week_1$centroids, add=TRUE, col="blue", cex = 0.5, lwd = 0.5)
plot(Queen, week_1$centroids, col="blue", cex = 0.5, lwd = 0.5)
Moran.I(week_1$mean_travel_time, W, na.rm=TRUE)
plot(week_1["mean_travel_time"])
dat
week_1 %>%
lm(formula = mean_travel_time ~ distance)
SAR_lm <- week_1 %>%
lm(formula = mean_travel_time ~ distance)
summary(SAR_lm)
listW <- nb2listw(nb)
listW <- nb2listw(Queen)
listW
library(SpatioTemporal)
install.packages("SpatioTemporal")
library(SpatioTemporal)
data(mesa.data.raw, package = "SpatioTemporal")
mesa.data.raw
mesa.data.raw %>% head()
library(tidyverse)
library(sf)
library(rgdal)
library(tigris)
library(spdep)
library(spatialreg)
library(ape)
library(SpatioTemporal)
#tigris package - contains roads for DC
options(tigris_class="sf")
load("data/travel_times_census_join.RData")
load("data/dc_acs_tracts.RData")
load("data/metro_lines.RData")
load("data/dc_roads.RData")
theme_map <- theme_void()
dc_acs_tracts$centroids <- st_centroid(st_geometry(dc_acs_tracts), of_largest_polygon)
# Compute distance from Washington Monument
mnm <- tribble(
~latitude, ~longitude,
38.8895, -77.0353
)
mnm_sf <- mnm %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
st_transform(crs = 102285)
travel_time_sf <- travel_time_sf %>%
mutate(distance = as.numeric(st_distance(centroids, mnm_sf$geometry, by_element = TRUE)))
travel_time_sf <- left_join(x = travel_times_census_join, y = dc_acs_tracts, by = "GEOID") %>%
st_as_sf() %>%
st_transform(crs = 102285)
# Compute distance from Washington Monument
mnm <- tribble(
~latitude, ~longitude,
38.8895, -77.0353
)
mnm_sf <- mnm %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
st_transform(crs = 102285)
travel_time_sf <- travel_time_sf %>%
mutate(distance = as.numeric(st_distance(centroids, mnm_sf$geometry, by_element = TRUE)))
data(mesa.data.raw, package = "SpatioTemporal")
names(mesa.data.raw)
mesa.data.raw$obs
mesa.data.raw$X %>% head()
map_lims <- st_bbox(dc_acs_tracts)
travel_time_sf %>% filter(year == 2017, month == 1, week == 3) %>%
ggplot() +
geom_sf(mapping = aes(fill = mean_travel_time), lwd=0.2) +
geom_sf(data = travel_time_sf$centroids, cex = 0.5) +
scale_fill_viridis_c(direction = -1)
travel_time_sf %>% filter(year == 2017, month == 1, week == 4) %>%
ggplot() +
geom_sf(mapping = aes(fill = mean_travel_time), lwd=0.2) +
geom_sf(data = dc_roads, color = "white", lwd=0.2) +
geom_sf(data = metro_line, color = "black", lwd=0.2) +
theme_map +
coord_sf(xlim = c(map_lims["xmin"], map_lims["xmax"]), ylim = c(map_lims["ymin"], map_lims["ymax"])) +
scale_fill_viridis_c(direction = -1)
travel_time_sf %>% filter(year == 2017, month == 1, week == 3) %>%
ggplot() +
geom_sf(mapping = aes(fill = med_incomeE)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf %>% filter(year == 2017, month == 1, week == 3) %>%
ggplot() +
geom_sf(mapping = aes(fill = blackE)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf %>% filter(year == 2017, month == 1, week == 3) %>%
ggplot() +
geom_sf(mapping = aes(fill = car_transitE)) +
theme_map +
scale_fill_viridis_c()
data(mesa.data.raw, package = "SpatioTemporal")
travel_time_sf
travel_time_sf %>% View()
library(tidyverse)
library(sf)
library(rgdal)
library(tigris)
library(spdep)
library(spatialreg)
library(ape)
#tigris package - contains roads for DC
options(tigris_class="sf")
load("data/travel_times_census_join.RData")
load("data/dc_acs_tracts.RData")
load("data/metro_lines.RData")
load("data/dc_roads.RData")
theme_map <- theme_void()
library(tidyverse)
library(sf)
library(tigris)
library(spdep)
library(spatialreg)
library(ape)
#tigris package - contains roads for DC
options(tigris_class="sf")
load("data/travel_times_census_join.RData")
load("data/dc_acs_tracts.RData")
load("data/metro_lines.RData")
load("data/dc_roads.RData")
theme_map <- theme_void()
travel_time_sf
dc_acs_tracts$centroids <- st_centroid(st_geometry(dc_acs_tracts), of_largest_polygon)
plot(st_geometry(dc_acs_tracts), border="grey")
plot(dc_acs_tracts$centroids, add=TRUE, col="blue", cex = 0.3)
travel_time_sf <- left_join(x = travel_times_census_join, y = dc_acs_tracts, by = "GEOID") %>%
st_as_sf() %>%
st_transform(crs = 102285)
travel_time_sf
dc_acs_tracts$centroids <- st_centroid(st_geometry(dc_acs_tracts), of_largest_polygon)
plot(st_geometry(dc_acs_tracts), border="grey")
plot(dc_acs_tracts$centroids, add=TRUE, col="blue", cex = 0.3)
travel_time_sf <- left_join(x = travel_times_census_join, y = dc_acs_tracts, by = "GEOID") %>%
st_as_sf() %>%
st_transform(crs = 102285)
# Compute distance from Washington Monument
mnm <- tribble(
~latitude, ~longitude,
38.8895, -77.0353
)
mnm_sf <- mnm %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
st_transform(crs = 102285)
travel_time_sf <- travel_time_sf %>%
mutate(distance = as.numeric(st_distance(centroids, mnm_sf$geometry, by_element = TRUE)))
library(tidyverse)
library(sf)
library(rgdal)
library(tigris)
library(spdep)
library(spatialreg)
library(ape)
#tigris package - contains roads for DC
options(tigris_class="sf")
load("data/travel_times_census_join.RData")
load("data/dc_acs_tracts.RData")
load("data/metro_lines.RData")
load("data/dc_roads.RData")
theme_map <- theme_void()
dc_acs_tracts$centroids <- st_centroid(st_geometry(dc_acs_tracts), of_largest_polygon)
plot(st_geometry(dc_acs_tracts), border="grey")
plot(dc_acs_tracts$centroids, add=TRUE, col="blue", cex = 0.3)
library(tidyverse)
library(sf)
library(rgdal)
library(tigris)
library(spdep)
library(spatialreg)
library(ape)
#tigris package - contains roads for DC
options(tigris_class="sf")
load("data/travel_times_census_join.RData")
load("data/dc_acs_tracts.RData")
load("data/metro_lines.RData")
load("data/dc_roads.RData")
theme_map <- theme_void()
dc_acs_tracts$centroids <- st_centroid(st_geometry(dc_acs_tracts), of_largest_polygon)
plot(st_geometry(dc_acs_tracts), border="grey")
plot(dc_acs_tracts$centroids, add=TRUE, col="blue", cex = 0.3)
centroids <- data.frame(cbind(st_coordinates(st_centroid(dc_acs_tracts))))
centroids <- centroids %>%
mutate(GEOID = dc_acs_tracts$GEOID)
dc_acs_tracts <- left_join(x = dc_acs_tracts, y = centroids, by = "GEOID")
travel_time_sf <- left_join(x = travel_times_census_join, y = dc_acs_tracts, by = "GEOID") %>%
st_as_sf() %>%
st_transform(crs = 102285)
library(tidyverse)
library(sf)
library(rgdal)
library(tigris)
library(spdep)
library(spatialreg)
library(ape)
#tigris package - contains roads for DC
options(tigris_class="sf")
load("data/travel_times_census_join.RData")
load("data/dc_acs_tracts.RData")
load("data/metro_lines.RData")
load("data/dc_roads.RData")
theme_map <- theme_void()
dc_acs_tracts$centroids <- st_centroid(st_geometry(dc_acs_tracts), of_largest_polygon)
plot(st_geometry(dc_acs_tracts), border="grey")
plot(dc_acs_tracts$centroids, add=TRUE, col="blue", cex = 0.3)
travel_time_sf <- travel_time_sf %>%
mutate(distance = st_distance(centroids, mnm_sf$geometry, by_element = TRUE),
march_inaug = ifelse((year == 2017 & month == 1 & week %in% c(3, 4)), 1, 0))
# Compute distance from Washington Monument
mnm <- tribble(
~latitude, ~longitude,
38.8895, -77.0353
)
mnm_sf <- mnm %>%
st_as_sf(coords = c("longitude", "latitude"), crs = 4326) %>%
st_transform(crs = 102285)
travel_time_sf <- travel_time_sf %>%
mutate(distance = st_distance(centroids, mnm_sf$geometry, by_element = TRUE),
march_inaug = ifelse((year == 2017 & month == 1 & week %in% c(3, 4)), 1, 0))
map_lims <- st_bbox(dc_acs_tracts)
travel_time_sf %>% filter(year == 2017, month == 1, week == 3) %>%
ggplot() +
geom_sf(mapping = aes(fill = mean_travel_time), lwd=0.2) +
geom_sf(data = travel_time_sf$centroids, cex = 0.5) +
scale_fill_viridis_c(direction = -1)
travel_time_sf %>% filter(year == 2017, month == 1, week == 4) %>%
ggplot() +
geom_sf(mapping = aes(fill = mean_travel_time), lwd=0.2) +
geom_sf(data = dc_roads, color = "white", lwd=0.2) +
geom_sf(data = metro_line, color = "black", lwd=0.2) +
theme_map +
coord_sf(xlim = c(map_lims["xmin"], map_lims["xmax"]), ylim = c(map_lims["ymin"], map_lims["ymax"])) +
scale_fill_viridis_c(direction = -1)
travel_time_sf_nontreat <- travel_time_sf %>%
filter(march_inaug == 0) %>%
group_by(GEOID)
travel_time_sf_nontreat %>% head()
travel_time_sf_nontreat <- travel_time_sf %>%
filter(march_inaug == 0) %>%
group_by(GEOID) %>%
summarise(mtt_mean = mean(mean_travel_time),
mtt_var = var(mean_travel_time))
travel_time_sf_nontreat
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = mtt_mean)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = mtt_var)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat <- travel_time_sf %>%
filter(march_inaug == 0) %>%
group_by(GEOID) %>%
summarise(mtt_mean = mean(mean_travel_time),
mtt_var = var(mean_travel_time)
mtt_sd = sd(mean_travel_time))
travel_time_sf_nontreat <- travel_time_sf %>%
filter(march_inaug == 0) %>%
group_by(GEOID) %>%
summarise(mtt_mean = mean(mean_travel_time),
mtt_var = var(mean_travel_time),
mtt_sd = sd(mean_travel_time))
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = mtt_sd)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = mtt_mean)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = mtt_sd)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = NumRoads)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat <- travel_time_sf %>%
filter(march_inaug == 0) %>%
group_by(GEOID) %>%
summarise(mtt_mean = mean(mean_travel_time),
mtt_var = var(mean_travel_time),
mtt_sd = sd(mean_travel_time),
NumRoads = mean(NumRoads),
NumMetro = mean(NumMetro))
travel_time_sf$NumRoads <- sapply(st_intersects(travel_time_sf,dc_roads),length)
travel_time_sf$NumMetro <- sapply(st_intersects(travel_time_sf,metro_line),length)
travel_time_sf_nontreat <- travel_time_sf %>%
filter(march_inaug == 0) %>%
group_by(GEOID) %>%
summarise(mtt_mean = mean(mean_travel_time),
mtt_var = var(mean_travel_time),
mtt_sd = sd(mean_travel_time),
NumRoads = mean(NumRoads),
NumMetro = mean(NumMetro))
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = mtt_sd)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = NumRoads)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = NumMetro)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat <- travel_time_sf %>%
filter(march_inaug == 0) %>%
group_by(GEOID) %>%
summarise(mtt_mean = mean(mean_travel_time),
mtt_var = var(mean_travel_time),
mtt_sd = sd(mean_travel_time),
NumRoads = log(mean(NumRoads)),
NumMetro = log(mean(NumMetro)))
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = mtt_mean)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = mtt_sd)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = NumRoads)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = NumMetro)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat <- travel_time_sf %>%
filter(march_inaug == 0) %>%
group_by(GEOID) %>%
summarise(mtt_mean = mean(mean_travel_time),
mtt_var = var(mean_travel_time),
mtt_sd = sd(mean_travel_time),
NumRoads = log(mean(NumRoads) + 0.0001),
NumMetro = log(mean(NumMetro + 0.0001)))
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = mtt_mean)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = mtt_sd)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = NumRoads)) +
theme_map +
scale_fill_viridis_c()
travel_time_sf_nontreat %>%
ggplot() +
geom_sf(mapping = aes(fill = NumMetro)) +
theme_map +
scale_fill_viridis_c()
